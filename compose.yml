services:
  mysql:
    container_name: db
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'db', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      # Run health check <start_period> seconds after container start.
      start_period: 18s
      # Proceeding checks are spaced by <interval> seconds
      interval: 5s
      # Fail check if it takes longer than 5
      timeout: 5s
      # Max 50 tries
      retries: 50
    env_file:
      - .env

  app-backend:
    container_name: sparesti-backend
    image: sparestigruppe2/idatt2106_2024_02_backend-app:latest
    depends_on:
      mysql:
        condition: service_healthy
    build: .
    # Make app container to wait on mysql container to spin up by restarting it
    restart: always
    volumes:
      - ./images:/upload-dir
    environment:
      MYSQL_HOST: db
      SPRING_DATASOURCE_URL: ${MYSQL_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '8080:8080'
    env_file:
      - .env

  app-frontend:
    container_name: sparesti-frontend
    image: sparestigruppe2/idatt2106_2024_02_frontend-app:latest
    ports:
      - '5173:5173'
volumes:
  mysql-data: